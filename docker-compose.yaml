services:
  web-app:
    build:
      context: . # путь до dockerfile`а, относительно PycharmProjects/django_docker/
    ports:
      - "8000:8000"
    volumes:
      - ./service:/service # добавляем django app в контейнер -> при изменениях rebuild не потребуется
    environment:
      - DB_HOST=db # ссылка на сервис дб
      - DB_NAME=pgdb
      - DB_USER=pguser
      - DB_PASS=pgpassword

    command: > # команда при запуске контейнера
      sh -c "python manage.py runserver 0.0.0.0:8000"

    depends_on:
      - db # не запускаем веб, пока не запущена бд

  db:
    image: postgres:14.6-alpine
    restart: always # перезапуск контейнера при краше
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=pgdb
      - POSTGRES_USER=pguser
      - POSTGRES_PASSWORD=pgpassword

  redis:
    image: redis:7.0.5-alpine
    hostname: redis

  worker:
    build:
      context: . # где искать dockerfile в проекте
    hostname: worker # redis://{hostname}:6379
    entrypoint: celery # начальная команда контейнера + доп. args снизу
    command: -A celery_app.app worker -l info -E
    volumes:
      - ./service:/service
    links:
      - redis
    depends_on:
      - redis # ждет загрузки редиса
      - db
    environment:
      - DB_HOST=db
      - DB_NAME=pgdb
      - DB_USER=pguser
      - DB_PASS=pgpassword

  worker2: # т.к. у нас singleton воркеры, если поступает две задачи - оба берутся за них
    build:
      context: .
    hostname: worker2
    entrypoint: celery
    command: -A celery_app.app worker -l info -E
    volumes:
      - ./service:/service
    links:
      - redis
    depends_on:
      - redis
      - db
    environment:
      - DB_HOST=db
      - DB_NAME=pgdb
      - DB_USER=pguser
      - DB_PASS=pgpassword
    
  flower:
    build:
      context: .
    hostname: flower
    entrypoint: celery
    command: -A celery_app.app flower
    volumes:
      - ./service:/service
    links:
      - redis
    depends_on:
      - redis
    ports:
      - "5555:5555" # 127.0.0.1:5555 смотрим че происходит с тасками

volumes:
  postgres_data:
